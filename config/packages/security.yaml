security:
<<<<<<< ours
    password_hashers:
        App\Entity\User: 'auto'

    enable_authenticator_manager: true
=======
    enable_authenticator_manager: true
    # https://symfony.com/doc/current/security.html#registering-the-user-hashing-passwords
    password_hashers:
        Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface: 'auto'
    # https://symfony.com/doc/current/security.html#loading-the-user-the-user-provider
>>>>>>> theirs
    providers:
        doctrine:
            entity:
                class: App\Entity\User
                property: username

    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
<<<<<<< ours

        main:
            pattern: ^/
            security: false
            #http_basic: ~
            #provider: doctrine
            #form_login:
            #    login_path: login
            #    check_path: login_check
            #    always_use_default_target_path:  true
            #    default_target_path:  /
            #logout: ~
=======
        main:
            lazy: true
            provider: users_in_memory

            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#the-firewall

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true
>>>>>>> theirs

    access_control:
<<<<<<< ours
        - { path: ^/login, roles: PUBLIC_ACCESS }
        - { path: ^/users, roles: PUBLIC_ACCESS }
        - { path: ^/, roles: PUBLIC_ACCESS }
=======
        # - { path: ^/admin, roles: ROLE_ADMIN }
        # - { path: ^/profile, roles: ROLE_USER }

when@test:
    security:
        password_hashers:
            # By default, password hashers are resource intensive and take time. This is
            # important to generate secure password hashes. In tests however, secure hashes
            # are not important, waste resources and increase test times. The following
            # reduces the work factor to the lowest possible values.
            Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface:
                algorithm: auto
                cost: 4 # Lowest possible value for bcrypt
                time_cost: 3 # Lowest possible value for argon
                memory_cost: 10 # Lowest possible value for argon
>>>>>>> theirs
